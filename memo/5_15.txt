5월15일배운기술

리듀서
Reducer는 Redux에서 상태(state)의 변화(transition)를 정의하는 순수 함수(purefucntion)다
이전 상태와 액션을 입력받아서 새로운 상태를 반환한다

리덕스 Redux
예측 가능한 상태 관리 라이브러리
주로 자바스크립트 애플리케이션(특히 React) 에서 애플리케이션의 상태(state)를
중앙에서 일관되게 관리할 수 있게 해줌

목적은
복잡한 UI의 상태를 한곳(store)에 집중해서 관리
언제, 왜. 어떻게 상태가 바뀌는지 "예측 가능"하게 만듬
상태 변화의 "흐름"을 명확히 하여 디버깅과 확장성높임

동작원리
상태(state)
앱 전체에서 관리해야 하는 데이터(예: 로그인유저,장바구니 목록등)
store : 상태를 저장하는 "중앙저장소"
Action: 상태를 어떻게바꿀지를 설명하는 객체(명령서)
Reducer: 액션이 일어났을 때, 기존 상태와 액션을 받아 "새로운 상태"로 변환하는 함수

사용자는 UI에서 어떤 이벤트(버튼 클릭 등)를 발생시키면
-> Action이 생성됨
-> Reducer가 Action을 해석해서
-> Store의 상태를 새로운 값으로 바꿈
-> UI는 변경된 상태를 보고 자동으로 다시 렌더링됨

특징은
상태를 한군데(Store)에 모아서, 언제든 꺼내 쓸수있다
모든 상태 변경은 "액션"을 통해서만 이뤄진다(직접 변경 불가)
Reducer는 항상 "순수 함수"여야 한다(입력이 같으면 출력이 같다)
React이외의 앱등에서도 쓸수있다

요약:
데이터를 한군데에 모아서 액션과 리듀서를 통해ㅔ 상태를 예측가능하게 관리해주는라이브러리


configureStore 함수
여러개의 리듀서를 하나로 합치고,미들웨어와 개발자도구 설정등 당야한 옵션을 쉽게 한번에
처리해서 store 를 만들어줌
즉 Redux의 createStore를 더쉽게 쓸수 있게만든 고수준함수

useSelector란?
Redux store의 상태(state)에서 원하는 값을 꺼내오는 React Hook(즉 store의 상태중  읽부읽음)

컴포넌트가 렌더링될떄마다 useSelector는 store에서 값을 읽음
store의 해당 값이 바뀌면
그값을 구독하는 컴포넌트가 자동으로 리렌더링됨
리덕스 상태 변화 감지를 "자동"으로 처리해줌(구독)

장점?
복잡한 store에서 필요한 값만 뽑아서 쓸수있다
필요한 값이 바뀔 때만 리렌더링된다(성능에유리)



